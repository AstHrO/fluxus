###############################################################
# SConscript for fluxus-engine
#
# This is the main PLT module for fluxus, containing all core
# graphics functions

Import("env", "BinaryModulesLocation", "MZDYN")

if env['PLATFORM'] == 'darwin':
	    Target = "fluxus-engine_ss.dylib"
else:
		Target = "fluxus-engine_ss.so"

Libs = Split("GLEW fluxus png ode tiff jpeg freetype")
Install = BinaryModulesLocation
if env['PLATFORM'] != 'darwin':
	    Libs += Split("GL GLU glut")

# link libraries statically when making an os x app
if env['PLATFORM'] == 'darwin' and GetOption('app'):
	for l in ['png', 'tiff', 'GLEW', 'freetype', 'ode', 'z', 'jpeg']:
		if l in Libs:
			Libs.remove(l)
		Libs.append(File('/opt/local/lib/lib%s.a' % l))

Source = Split("src/Engine.cpp \
		src/FluxusEngine.cpp \
		src/SchemeHelper.cpp \
        src/GlobalStateFunctions.cpp \
		src/LocalStateFunctions.cpp \
		src/MathsFunctions.cpp \
		src/PrimitiveFunctions.cpp \
		src/PDataFunctions.cpp \
		src/UtilFunctions.cpp \
		src/TurtleFunctions.cpp \
		src/LightFunctions.cpp \
		src/PhysicsFunctions.cpp \
		src/TurtleBuilder.cpp \
		src/PFuncContainer.cpp") + \
		[MZDYN]
		
env.SharedLibrary(source = Source, 
				  target = Target, 
		  		  LIBS = Libs,
		  		  SHLIBPREFIX = "")
						  
env.Install(Install, Target)
