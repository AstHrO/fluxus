(clear)
(colour (vector 1 1 1))
(collisions 1)
(define speed 0)
(define steer 0)
(define wheel_mass 0.1)
(gravity (vector 0 -2 0))
(surface_params 0.1 0.1 0.5 0.2)

(push)
    (define (build_wheel)
        (colour (vector 0.4 0.2 0.0))
        (scale (vector 0.6 0.6 0.6))
        (rotate (vector 90 0 0))
        (rotate (vector 0 0 90))
        (translate (vector 0 -0.5 0))
        (hint_none)
        (hint_wire)
        (build_cylinder 1 10))
        
    (translate (vector 0 2 0))
  
    (push)
        (colour (vector 0.2 0.2 0.2))
        (scale (vector 1.5 0.5 2.5))
        (define car_body (build_cube))
        (set_mass car_body 0.1)
    (pop)   
    (push)
        (translate (vector 1.1 0 1.5))
        (define back_right_wheel (build_wheel))
        (set_mass back_right_wheel wheel_mass)
    (pop)
    (push)
        (translate (vector -1.1 0 1.5))
        (define back_left_wheel (build_wheel))
        (set_mass back_left_wheel wheel_mass)
    (pop)
    (push)
        (translate (vector 0 -1 -1.5))
        (define front_right_wheel (build_wheel))
        (set_mass front_right_wheel wheel_mass)
    (pop)
    ;(push)
    ;    (translate (vector -1.1 -1 -1.5))
    ;    (define front_left_wheel (build_wheel))
    ;    (set_mass front_left_wheel wheel_mass)
    ;(pop)
   
    (active_box car_body)
    (active_sphere front_right_wheel)
    (active_sphere back_right_wheel)
    ;(active_sphere front_left_wheel)
    (active_sphere back_left_wheel)
    
    (define back_right_joint (build_hinge2joint car_body back_right_wheel (vector 1.1 2 1.5) (vector 0 1 0) (vector 1 0 0)))
    (define back_left_joint (build_hinge2joint car_body back_left_wheel (vector -1.1 2 1.5) (vector 0 1 0) (vector 1 0 0)))
    (define front_right_joint (build_hinge2joint car_body front_right_wheel (vector 0 1 -1.5) (vector 0 1 0) (vector 1 0 0)))
    ;(define front_left_joint (build_hinge2joint car_body front_left_wheel (vector -1.1 1 -1.5) (vector 0 1 0) (vector 1 0 0)))
    
    (joint_lostop front_right_joint 0)
    (joint_lostop back_right_joint 0)
    ;(joint_lostop front_left_joint 0)    
    (joint_lostop back_left_joint 0)    
    
    (joint_histop front_right_joint 0)
    (joint_histop back_right_joint 0)
    ;(joint_histop front_left_joint 0)
    (joint_histop back_left_joint 0)    

    (joint_fmax2 back_right_joint 2)
    (joint_fmax2 back_left_joint 2)
  
    ;(joint_fmax front_left_joint 2)
    ;(joint_histop front_left_joint 0.75)
    ;(joint_lostop front_left_joint -0.75)
    ;(joint_fudge front_left_joint 0.1)
    (joint_fmax front_right_joint 0.2)
    (joint_histop front_right_joint 0.75)
    (joint_lostop front_right_joint -0.75)
    (joint_fudge front_right_joint 0.0)    
(pop)

(define (update)
    (joint_vel2 back_right_joint speed)
    (joint_vel2 back_left_joint speed)
    ;(joint_vel front_left_joint steer)
    (joint_vel front_right_joint steer))
    
(define (rand_range min max)
    (+ min (* (flxrnd) (- max min))))
    
(define (build_terrain n)
    (push)
        (colour (vector (flxrnd) (flxrnd) (flxrnd)))
        (translate (vector (rand_range -60 60) 0 (rand_range -60 60)))
        ;(rotate (vector (rand_range 0 360) (rand_range 0 360) (rand_range 0 360)))
        (scale (vector (rand_range 1 5) (rand_range 1 5) (rand_range 1 5)))
        (passive_box (build_cube))
    (pop)
    (if (zero? n)
        1
        (build_terrain (- n 1))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;    
    

(push)
(translate (vector 0 -0.5 0))
(scale (vector 1000 1 1000))
(texture (load_texture "green.png"))
(build_cube)
(pop)
(ground_plane (vector 0 1 0) 0.5)

(lock_camera car_body)

(build_terrain 100)
;(blur 0.2)

(define (run_loop)
    (update)
    
    (if (key_pressed " ")
        (begin
        (set! speed 0)
        (set! steer 0)))
    
    (if (key_pressed "q")
        (set! speed (+ speed 1)))
    (if (key_pressed "a")
        (set! speed (- speed 1)))
    (if (key_pressed "o")
        (set! steer (- steer 1)))
    (if (key_pressed "p")
        (set! steer (+ steer 1)))
    
    (set! steer (* steer 0.8)))
    
(engine_callback "(run_loop)")
